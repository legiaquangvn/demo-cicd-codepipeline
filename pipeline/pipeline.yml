AWSTemplateFormatVersion: 2010-09-09
Description: >

  This template generates a generic 2-environment CI/CD Pipeline for Serverless Apps that use SAM (Serverless Application Model).

  Charges may apply for AWS Services utilized - Below are a summary for your convenience:

    GitHub: Manages and Stores your service source code (Git repository)
    Amazon S3: Manages CodeBuild Artifacts as well as Cache for subsequent runs when defined in the build spec
    AWS CodeBuild: Manages and Runs builds specified under buildspec.yaml
    AWS CodePipeline: Manages and Runs the Continuous Integration and Continuous Deployment pipeline
    AWS CloudFormation: Manages SAM templates and creates the Infrastructure necessary for each environment
    AWS IAM: Manages Identity and Access across Services outlined above

Parameters:
  GithubRepo:
    Description: Gitub Repository name
    Type: AWS::SSM::Parameter::Value<String>
    Default: /service/demo-cicd-pipeline/github/repo

  GithubToken:
    Description: Github OAuth Token with full permissions on admin:repo_hook and repo
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true
    Default: /service/demo-cicd-pipeline/github/token

  GithubUser:
    Description: Github user where the repository lives
    Type: AWS::SSM::Parameter::Value<String>
    Default: /service/demo-cicd-pipeline/github/user

  BuildComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type to use for building the app

  SiteBucketName:
    Type: String
    Description: Name of bucket to create to host the website
    Default: "cicd-static-website-v02"    

Resources:
  ######   #######  ##     ## ########   ######  ########
  ##    ## ##     ## ##     ## ##     ## ##    ## ##
  ##       ##     ## ##     ## ##     ## ##       ##
  ######  ##     ## ##     ## ########  ##       ######
  ## ##     ## ##     ## ##   ##   ##       ##
  ##    ## ##     ## ##     ## ##    ##  ##    ## ##
  ######   #######   #######  ##     ##  ######  ########

  # CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: "Stack"
          Value: !Ref AWS::StackName
        - Key: "Project"
          Value: demo-cicd-codepipeline
    DeletionPolicy: Retain

  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref SiteBucketName
      WebsiteConfiguration:
        IndexDocument: index.html


  ########  ##     ## #### ##       ########
  ##     ## ##     ##  ##  ##       ##     ##
  ##     ## ##     ##  ##  ##       ##     ##
  ########  ##     ##  ##  ##       ##     ##
  ##     ## ##     ##  ##  ##       ##     ##
  ##     ## ##     ##  ##  ##       ##     ##
  ########   #######  #### ######## ########

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: demo-cicd-codepipeline
      Description: Build lambda project
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0 #aws/codebuild/python:3.6.5 # More info on Images: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref BuildArtifactsBucket
      Cache:
        Type: S3
        Location: !Sub ${BuildArtifactsBucket}/codebuild-cache
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: simpleApp/buildspec.yaml
      Tags:
        - Key: "Stack"
          Value: !Ref AWS::StackName
        - Key: "Project"
          Value: demo-cicd-codepipeline

  CodeBuildDeploySite:
      Type: AWS::CodeBuild::Project
      # DependsOn: CodeBuildRole
      Properties:
        Name: !Sub ${AWS::StackName}-DeploySite
        Description: Deploy site to S3
        # ServiceRole: !GetAtt CodeBuildRole.Arn
        Artifacts:
          Type: CODEPIPELINE
        Environment:
          Type: LINUX_CONTAINER
          ComputeType: !Ref BuildComputeType
          Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Source:
          Type: CODEPIPELINE
          BuildSpec: !Sub |
            version: 0.2
            phases:
              post_build:
                commands:
                  - aws s3 sync "website" "s3://${SiteBucket}/" --delete --acl "public-read"
                  
            artifacts:
              type: zip
              files:
                - ./index.html
        TimeoutInMinutes: 10
        # aws s3 sync "website" "s3://${SiteBucket}/" --delete --acl "public-read"
        # aws s3 sync "website" "s3://cicd-static-website" --delete --acl "public-read"


  ########  #### ########  ######## ##       #### ##    ## ########
  ##     ##  ##  ##     ## ##       ##        ##  ###   ## ##
  ##     ##  ##  ##     ## ##       ##        ##  ####  ## ##
  ########   ##  ########  ######   ##        ##  ## ## ## ######
  ##         ##  ##        ##       ##        ##  ##  #### ##
  ##         ##  ##        ##       ##        ##  ##   ### ##
  ##        #### ##        ######## ######## #### ##    ## ########

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactsBucket
        Type: S3
      Name: demo-cicd-codepipeline
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                # More info on Possible Values: https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: !Ref GithubUser
                Repo: !Ref GithubRepo
                Branch: master
                OAuthToken: !Ref GithubToken
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: Deploy Site
          Actions:
          - Name: Artifact
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: SourceCodeAsZip 
            OutputArtifacts:
            - Name: DeploymentArtifacts
            Configuration:
              ProjectName: !Ref CodeBuildDeploySite
            RunOrder: 1              
        - Name: Build Lambda
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
        - Name: Prod
          Actions:
            - Name: DeploymentApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              RunOrder: 1
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                # More info on Possible Values for Cloudformation: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-action-reference.html#w2ab2c13c13b9
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: demo-cicd-codepipeline-Prod
                ChangeSetName: demo-cicd-codepipeline-ChangeSet-Stage
                TemplatePath: BuildArtifactAsZip::packaged.yml
                Capabilities: CAPABILITY_IAM
                ParameterOverrides: |
                  {
                    "MyEnvironment" : "prod"
                  }
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RunOrder: 2
            - Name: ExecuteChangeSet
              InputArtifacts: []
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: demo-cicd-codepipeline-Prod
                ChangeSetName: demo-cicd-codepipeline-ChangeSet-Stage
              RunOrder: 3


  ####    ###    ##     ##
  ##    ## ##   ###   ###
  ##   ##   ##  #### ####
  ##  ##     ## ## ### ##
  ##  ######### ##     ##
  ##  ##     ## ##     ##
  #### ##     ## ##     ##

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/demo-cicd-codepipeline"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/demo-cicd-codepipeline:*"
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:aws:s3:::${BuildArtifactsBucket}/*"
        - PolicyName: CodeBuildParameterStore
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ssm:GetParameters"
                Resource: "*"

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                  - "lambda:InvokeFunction"
                  - "lambda:ListFunctions"
                  - "lambda:InvokeAsyc"
                Resource: "*"
        - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${BuildArtifactsBucket}/*"
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}"
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/demo-cicd-codepipeline*/*"
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31"

Outputs:
  GitHubRepositoryHttpUrl:
    Description: GitHub Git repository
    Value: !Sub https://github.com/${GithubUser}/${GithubRepo}.git

  GitHubRepositorySshUrl:
    Description: GitHub Git repository
    Value: !Sub git@github.com:${GithubUser}/${GithubRepo}.git

  BuildArtifactS3Bucket:
    Description: Amazon S3 Bucket for Pipeline and Build artifacts
    Value: !Ref BuildArtifactsBucket

  CodeBuildProject:
    Description: CodeBuild Project name
    Value: !Ref CodeBuildProject

  CodePipeline:
    Description: AWS CodePipeline pipeline name
    Value: !Ref Pipeline

  CodeBuildIAMRole:
    Description: CodeBuild IAM Role
    Value: !GetAtt CodeBuildServiceRole.Arn

  CloudformationIAMRole:
    Description: Cloudformation IAM Role
    Value: !GetAtt CloudFormationExecutionRole.Arn

  CodePipelineIAMRole:
    Description: CodePipeline IAM Role
    Value: !GetAtt CodePipelineExecutionRole.Arn
